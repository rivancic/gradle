/**
 * By default only Gradle Plugin Portal is defined as a repository that provides Gradle plugins that can be applied
 * within <pre>plugins{}<pre> block.
 *
 * If you want to specify any additional repository you have to define them in pluginManagement block within
 * setting.gradle file. Remember pluginManagement has to be the first statement inside settings.gradle file.
 *
 * In definition below 3 repositories will be taken ito account when Gradle will search for defined plugin by its ID and version:
 * - Gradle Plugin Portal
 * - Maven Local repository will be taken into account when Gradle
 * - Custom defined Maven repository where Archiva server is providing the plugins.
 */
pluginManagement {
  repositories {
    logger.info("---- settings.gradle Plugin Repositories ------------------------------------------------------------")
    def gradlePluginPortalFlag = false
    try {
      gradlePluginPortalFlag = "${useGradlePluginPortal}"
    } catch(Exception e) {
      logger.info("\"useGradlePluginPortal\" variable isn't set in gradle.properties")
    }
    if(gradlePluginPortalFlag == "true") {
      gradlePluginPortal()
      logger.info("Using Gradle Plugin Portal")
    }

    def useMavenLocalFlag = false
    try {
      useMavenLocalFlag = "${useMavenLocalCache}"
    } catch(Exception e) {
      logger.info("\"useMavenLocalCache\" variable isn't set in gradle.properties")
    }
    if(useMavenLocalFlag == "true") {
      mavenLocal()
      logger.info("Using Maven Local Cache")
    }

    def useMavenPrivateFlag = false
    try {
      useMavenPrivateFlag = "${useMavenPrivateRepo}"
    } catch(Exception e) {
      logger.info("\"useMavenPrivateRepo\" variable isn't set in gradle.properties")
    }
    if(useMavenPrivateFlag == "true") {
      maven {
        url = "http://localhost:8080/repository/internal"
        name = "mavenArchivaPrivate"
        allowInsecureProtocol = true
        credentials {
          username = "$privateArchivaUser"
          password = "$privateArchivaPassword"
        }
      }
      logger.info("Using Maven Private Repository at http://localhost:8080/repository/internal")
    }
  }
}
rootProject.name = 'binary-plugin-assignment-test-project'

